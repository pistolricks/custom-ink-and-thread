import { M as MaybeAccessor } from '../types-CfOU1RES.js';

/**
 * Calls the `onPointer` callback when a `pointerdown` or `pointerup` event occurs outside of the given element.
 *
 * @param props.element - The element to check if the pointer down event occurred inside of.
 * @param props.enabled - Whether the listener is enabled. *Default = `true`*
 * @param props.strategy - Whether to listen for `pointerdown` or `pointerup` events. *Default = `pointerup`*
 * @param props.ignore - Ignore pointer events that occur inside of this element.
 * @param props.onPointer - Callback fired when a pointer event occurs outside of the given element.
 */
declare const createOutsidePointer: (props: {
    element: MaybeAccessor<HTMLElement | null>;
    enabled?: MaybeAccessor<boolean>;
    strategy?: MaybeAccessor<"pointerdown" | "pointerup">;
    ignore?: MaybeAccessor<HTMLElement | null>;
    onPointer: (event: PointerEvent) => void;
}) => void;

export { createOutsidePointer as default };
