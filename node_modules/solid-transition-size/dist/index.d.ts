import { MaybeAccessor } from '@corvu/utils/reactivity';
export { MaybeAccessor } from '@corvu/utils/reactivity';
import { Accessor } from 'solid-js';

/**
 * Utility that uses a `ResizeObserver` to provide the size of an element before and after resize. Used to transition the width/height of elements that don't have a fixed size applied.
 *
 * @param props.element - The element to transition.
 * @param props.enabled - Whether the utility is enabled. *Default = `true`*
 * @param props.dimension - The dimension to transition. *Default = `'both'`*
 * @returns ```typescript
 * {
 *   transitioning: () => boolean
 *   transitionSize: () => number | [number, number] | null
 * }
 * ```
 */
declare function createTransitionSize(props: {
    element: MaybeAccessor<HTMLElement | null>;
    enabled?: MaybeAccessor<boolean>;
    dimension?: MaybeAccessor<'both'>;
}): {
    transitioning: Accessor<boolean>;
    transitionSize: Accessor<[number, number] | null>;
};
declare function createTransitionSize(props: {
    element: MaybeAccessor<HTMLElement | null>;
    enabled?: MaybeAccessor<boolean>;
    dimension: MaybeAccessor<'width' | 'height'>;
}): {
    transitioning: Accessor<boolean>;
    transitionSize: Accessor<number | null>;
};

export { createTransitionSize as default };
