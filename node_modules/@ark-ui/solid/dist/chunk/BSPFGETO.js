import { runIfFn } from './DT73WLR4.js';
import { createSignal, createMemo, untrack } from 'solid-js';

function useControllableState(props) {
  const [uncontrolledValue, setUncontrolledValue] = createSignal(runIfFn(props.defaultValue));
  const controlled = createMemo(() => props.value?.() !== void 0);
  const currentValue = createMemo(() => controlled() ? props.value?.() : uncontrolledValue());
  const setValue = (next) => {
    untrack(() => {
      const nextValue = runIfFn(next, currentValue());
      if (controlled()) {
        return props.onChange?.(nextValue);
      }
      setUncontrolledValue(nextValue);
      return props.onChange?.(nextValue);
    });
  };
  return [currentValue, setValue];
}

export { useControllableState };
