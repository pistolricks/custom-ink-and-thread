import * as combobox$1 from '@zag-js/combobox';
import { ItemProps, ItemState, TriggerProps, HighlightChangeDetails, InputValueChangeDetails, OpenChangeDetails, ValueChangeDetails } from '@zag-js/combobox';
export { HighlightChangeDetails as ComboboxHighlightChangeDetails, InputValueChangeDetails as ComboboxInputValueChangeDetails, OpenChangeDetails as ComboboxOpenChangeDetails, ValueChangeDetails as ComboboxValueChangeDetails, anatomy as comboboxAnatomy } from '@zag-js/combobox';
export { createListCollection } from '../collection.js';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import { C as CollectionItem, O as Optional } from '../../types-B277wCdv.js';
import { PropTypes } from '@zag-js/solid';
import { ListCollection, CollectionItem as CollectionItem$1 } from '@zag-js/collection';
export { CollectionItem, ListCollection } from '@zag-js/collection';
import { U as UsePresenceProps } from '../../use-presence-Ct1onT3-.js';
import '@zag-js/presence';
import '../../render-strategy-B5MqQP3X.js';

interface ComboboxClearTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface ComboboxClearTriggerProps extends HTMLProps<'button'>, ComboboxClearTriggerBaseProps {
}
declare const ComboboxClearTrigger: (props: ComboboxClearTriggerProps) => solid_js.JSX.Element;

interface ComboboxContentBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxContentProps extends HTMLProps<'div'>, ComboboxContentBaseProps {
}
declare const ComboboxContent: (props: ComboboxContentProps) => solid_js.JSX.Element;

interface UseComboboxProps<T extends CollectionItem> extends Optional<Omit<combobox$1.Context<T>, 'collection' | 'dir' | 'getRootNode' | 'open.controlled'>, 'id'> {
    /**
     * The initial open state of the combobox when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: combobox$1.Context['open'];
    /**
     * The initial value of the combobox when it is first rendered.
     * Use when you do not need to control the state of the combobox.
     */
    defaultValue?: combobox$1.Context<T>['value'];
    /**
     * The collection of items
     */
    collection: ListCollection<T>;
}
interface UseComboboxReturn<T extends CollectionItem> extends Accessor<combobox$1.Api<PropTypes, T>> {
}
declare const useCombobox: <T extends CollectionItem>(props: UseComboboxProps<T>) => UseComboboxReturn<T>;

interface UseComboboxContext<T extends CollectionItem> extends UseComboboxReturn<T> {
}
declare const useComboboxContext: () => UseComboboxContext<any>;

interface ComboboxContextProps<T extends CollectionItem> {
    children: (context: UseComboboxContext<T>) => JSX.Element;
}
declare const ComboboxContext: <T extends CollectionItem>(props: ComboboxContextProps<T>) => JSX.Element;

interface ComboboxControlBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxControlProps extends HTMLProps<'div'>, ComboboxControlBaseProps {
}
declare const ComboboxControl: (props: ComboboxControlProps) => solid_js.JSX.Element;

interface ComboboxInputBaseProps extends PolymorphicProps<'input'> {
}
interface ComboboxInputProps extends HTMLProps<'input'>, ComboboxInputBaseProps {
}
declare const ComboboxInput: (props: ComboboxInputProps) => solid_js.JSX.Element;

interface ComboboxItemBaseProps extends ItemProps, PolymorphicProps<'div'> {
}
interface ComboboxItemProps extends HTMLProps<'div'>, ComboboxItemBaseProps {
}
declare const ComboboxItem: (props: ComboboxItemProps) => solid_js.JSX.Element;

interface UseComboboxItemContext extends Accessor<ItemState> {
}
declare const useComboboxItemContext: () => UseComboboxItemContext;

interface ComboboxItemContextProps {
    children: (context: UseComboboxItemContext) => JSX.Element;
}
declare const ComboboxItemContext: (props: ComboboxItemContextProps) => JSX.Element;

interface ComboboxItemGroupBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxItemGroupProps extends HTMLProps<'div'>, ComboboxItemGroupBaseProps {
}
declare const ComboboxItemGroup: (props: ComboboxItemGroupProps) => solid_js.JSX.Element;

interface ComboboxItemGroupLabelBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxItemGroupLabelProps extends HTMLProps<'div'>, ComboboxItemGroupLabelBaseProps {
}
declare const ComboboxItemGroupLabel: (props: ComboboxItemGroupLabelProps) => solid_js.JSX.Element;

interface ComboboxItemIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxItemIndicatorProps extends HTMLProps<'div'>, ComboboxItemIndicatorBaseProps {
}
declare const ComboboxItemIndicator: (props: ComboboxItemIndicatorProps) => solid_js.JSX.Element;

interface ComboboxItemTextBaseProps extends PolymorphicProps<'span'> {
}
interface ComboboxItemTextProps extends HTMLProps<'span'>, ComboboxItemTextBaseProps {
}
declare const ComboboxItemText: (props: ComboboxItemTextProps) => solid_js.JSX.Element;

interface ComboboxLabelBaseProps extends PolymorphicProps<'label'> {
}
interface ComboboxLabelProps extends HTMLProps<'label'>, ComboboxLabelBaseProps {
}
declare const ComboboxLabel: (props: ComboboxLabelProps) => solid_js.JSX.Element;

interface ComboboxListBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxListProps extends HTMLProps<'div'>, ComboboxListBaseProps {
}
declare const ComboboxList: (props: ComboboxListProps) => solid_js.JSX.Element;

interface ComboboxPositionerBaseProps extends PolymorphicProps<'div'> {
}
interface ComboboxPositionerProps extends HTMLProps<'div'>, ComboboxPositionerBaseProps {
}
declare const ComboboxPositioner: (props: ComboboxPositionerProps) => solid_js.JSX.Element;

interface ComboboxRootBaseProps<T extends CollectionItem> extends UseComboboxProps<T>, UsePresenceProps, PolymorphicProps<'div'> {
}
interface ComboboxRootProps<T extends CollectionItem> extends HTMLProps<'div'>, ComboboxRootBaseProps<T> {
}
declare const ComboboxRoot: <T extends CollectionItem>(props: ComboboxRootProps<T>) => solid_js.JSX.Element;

interface RootProviderProps<T extends CollectionItem> {
    value: UseComboboxReturn<T>;
}
interface ComboboxRootProviderBaseProps<T extends CollectionItem> extends RootProviderProps<T>, UsePresenceProps, PolymorphicProps<'div'> {
}
interface ComboboxRootProviderProps<T extends CollectionItem> extends HTMLProps<'div'>, ComboboxRootProviderBaseProps<T> {
}
declare const ComboboxRootProvider: <T extends CollectionItem>(props: ComboboxRootProviderProps<T>) => solid_js.JSX.Element;

interface ComboboxTriggerBaseProps extends TriggerProps, PolymorphicProps<'button'> {
}
interface ComboboxTriggerProps extends HTMLProps<'button'>, ComboboxTriggerBaseProps {
}
declare const ComboboxTrigger: (props: ComboboxTriggerProps) => solid_js.JSX.Element;

declare const combobox_HighlightChangeDetails: typeof HighlightChangeDetails;
declare const combobox_InputValueChangeDetails: typeof InputValueChangeDetails;
declare const combobox_OpenChangeDetails: typeof OpenChangeDetails;
declare const combobox_ValueChangeDetails: typeof ValueChangeDetails;
declare namespace combobox {
  export { ComboboxClearTrigger as ClearTrigger, type ComboboxClearTriggerBaseProps as ClearTriggerBaseProps, type ComboboxClearTriggerProps as ClearTriggerProps, CollectionItem$1 as CollectionItem, ComboboxContent as Content, type ComboboxContentBaseProps as ContentBaseProps, type ComboboxContentProps as ContentProps, ComboboxContext as Context, type ComboboxContextProps as ContextProps, ComboboxControl as Control, type ComboboxControlBaseProps as ControlBaseProps, type ComboboxControlProps as ControlProps, combobox_HighlightChangeDetails as HighlightChangeDetails, ComboboxInput as Input, type ComboboxInputBaseProps as InputBaseProps, type ComboboxInputProps as InputProps, combobox_InputValueChangeDetails as InputValueChangeDetails, ComboboxItem as Item, type ComboboxItemBaseProps as ItemBaseProps, ComboboxItemContext as ItemContext, type ComboboxItemContextProps as ItemContextProps, ComboboxItemGroup as ItemGroup, type ComboboxItemGroupBaseProps as ItemGroupBaseProps, ComboboxItemGroupLabel as ItemGroupLabel, type ComboboxItemGroupLabelBaseProps as ItemGroupLabelBaseProps, type ComboboxItemGroupLabelProps as ItemGroupLabelProps, type ComboboxItemGroupProps as ItemGroupProps, ComboboxItemIndicator as ItemIndicator, type ComboboxItemIndicatorBaseProps as ItemIndicatorBaseProps, type ComboboxItemIndicatorProps as ItemIndicatorProps, type ComboboxItemProps as ItemProps, ComboboxItemText as ItemText, type ComboboxItemTextBaseProps as ItemTextBaseProps, type ComboboxItemTextProps as ItemTextProps, ComboboxLabel as Label, type ComboboxLabelBaseProps as LabelBaseProps, type ComboboxLabelProps as LabelProps, ComboboxList as List, type ComboboxListBaseProps as ListBaseProps, type ComboboxListProps as ListProps, combobox_OpenChangeDetails as OpenChangeDetails, ComboboxPositioner as Positioner, type ComboboxPositionerBaseProps as PositionerBaseProps, type ComboboxPositionerProps as PositionerProps, ComboboxRoot as Root, type ComboboxRootBaseProps as RootBaseProps, type ComboboxRootProps as RootProps, ComboboxRootProvider as RootProvider, type ComboboxRootProviderBaseProps as RootProviderBaseProps, type ComboboxRootProviderProps as RootProviderProps, ComboboxTrigger as Trigger, type ComboboxTriggerBaseProps as TriggerBaseProps, type ComboboxTriggerProps as TriggerProps, combobox_ValueChangeDetails as ValueChangeDetails };
}

export { combobox as Combobox, ComboboxClearTrigger, type ComboboxClearTriggerBaseProps, type ComboboxClearTriggerProps, ComboboxContent, type ComboboxContentBaseProps, type ComboboxContentProps, ComboboxContext, type ComboboxContextProps, ComboboxControl, type ComboboxControlBaseProps, type ComboboxControlProps, ComboboxInput, type ComboboxInputBaseProps, type ComboboxInputProps, ComboboxItem, type ComboboxItemBaseProps, ComboboxItemContext, type ComboboxItemContextProps, ComboboxItemGroup, type ComboboxItemGroupBaseProps, ComboboxItemGroupLabel, type ComboboxItemGroupLabelBaseProps, type ComboboxItemGroupLabelProps, type ComboboxItemGroupProps, ComboboxItemIndicator, type ComboboxItemIndicatorBaseProps, type ComboboxItemIndicatorProps, type ComboboxItemProps, ComboboxItemText, type ComboboxItemTextBaseProps, type ComboboxItemTextProps, ComboboxLabel, type ComboboxLabelBaseProps, type ComboboxLabelProps, ComboboxList, type ComboboxListBaseProps, type ComboboxListProps, ComboboxPositioner, type ComboboxPositionerBaseProps, type ComboboxPositionerProps, ComboboxRoot, type ComboboxRootBaseProps, type ComboboxRootProps, ComboboxRootProvider, type ComboboxRootProviderBaseProps, type ComboboxRootProviderProps, ComboboxTrigger, type ComboboxTriggerBaseProps, type ComboboxTriggerProps, type UseComboboxContext, type UseComboboxItemContext, type UseComboboxProps, type UseComboboxReturn, useCombobox, useComboboxContext, useComboboxItemContext };
