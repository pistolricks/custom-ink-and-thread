import * as numberInput$1 from '@zag-js/number-input';
import { FocusChangeDetails, ValueChangeDetails, ValueInvalidDetails } from '@zag-js/number-input';
export { FocusChangeDetails as NumberInputFocusChangeDetails, ValueChangeDetails as NumberInputValueChangeDetails, ValueInvalidDetails as NumberInputValueInvalidDetails, anatomy as numberInputAnatomy } from '@zag-js/number-input';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PropTypes } from '@zag-js/solid';
import { O as Optional, A as Assign } from '../../types-B277wCdv.js';
import { PolymorphicProps, HTMLProps } from '../factory.js';

interface UseNumberInputProps extends Optional<Omit<numberInput$1.Context, 'dir' | 'getRootNode'>, 'id'> {
    /**
     * The initial value of the number input when it is first rendered.
     * Use when you do not need to control the state of the number input.
     */
    defaultValue?: numberInput$1.Context['value'];
}
interface UseNumberInputReturn extends Accessor<numberInput$1.Api<PropTypes>> {
}
declare const useNumberInput: (props?: UseNumberInputProps) => UseNumberInputReturn;

interface UseNumberInputContext extends UseNumberInputReturn {
}
declare const useNumberInputContext: () => UseNumberInputContext;

interface NumberInputContextProps {
    children: (context: UseNumberInputContext) => JSX.Element;
}
declare const NumberInputContext: (props: NumberInputContextProps) => JSX.Element;

interface NumberInputControlBaseProps extends PolymorphicProps<'div'> {
}
interface NumberInputControlProps extends HTMLProps<'div'>, NumberInputControlBaseProps {
}
declare const NumberInputControl: (props: NumberInputControlProps) => solid_js.JSX.Element;

interface NumberInputDecrementTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface NumberInputDecrementTriggerProps extends HTMLProps<'button'>, NumberInputDecrementTriggerBaseProps {
}
declare const NumberInputDecrementTrigger: (props: NumberInputDecrementTriggerProps) => solid_js.JSX.Element;

interface NumberInputIncrementTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface NumberInputIncrementTriggerProps extends HTMLProps<'button'>, NumberInputIncrementTriggerBaseProps {
}
declare const NumberInputIncrementTrigger: (props: NumberInputIncrementTriggerProps) => solid_js.JSX.Element;

interface NumberInputInputBaseProps extends PolymorphicProps<'input'> {
}
interface NumberInputInputProps extends HTMLProps<'input'>, NumberInputInputBaseProps {
}
declare const NumberInputInput: (props: NumberInputInputProps) => solid_js.JSX.Element;

interface NumberInputLabelBaseProps extends PolymorphicProps<'label'> {
}
interface NumberInputLabelProps extends HTMLProps<'label'>, NumberInputLabelBaseProps {
}
declare const NumberInputLabel: (props: NumberInputLabelProps) => solid_js.JSX.Element;

interface NumberInputRootBaseProps extends UseNumberInputProps, PolymorphicProps<'div'> {
}
interface NumberInputRootProps extends Assign<HTMLProps<'div'>, NumberInputRootBaseProps> {
}
declare const NumberInputRoot: (props: NumberInputRootProps) => solid_js.JSX.Element;

interface RootProviderProps {
    value: UseNumberInputReturn;
}
interface NumberInputRootProviderBaseProps extends PolymorphicProps<'div'> {
}
interface NumberInputRootProviderProps extends HTMLProps<'div'>, RootProviderProps, NumberInputRootProviderBaseProps {
}
declare const NumberInputRootProvider: (props: NumberInputRootProviderProps) => solid_js.JSX.Element;

interface NumberInputScrubberBaseProps extends PolymorphicProps<'div'> {
}
interface NumberInputScrubberProps extends HTMLProps<'div'>, NumberInputScrubberBaseProps {
}
declare const NumberInputScrubber: (props: NumberInputScrubberProps) => solid_js.JSX.Element;

interface NumberInputValueTextBaseProps extends PolymorphicProps<'span'> {
}
interface NumberInputValueTextProps extends HTMLProps<'span'>, NumberInputValueTextBaseProps {
}
declare const NumberInputValueText: (props: NumberInputValueTextProps) => solid_js.JSX.Element;

declare const numberInput_FocusChangeDetails: typeof FocusChangeDetails;
declare const numberInput_ValueChangeDetails: typeof ValueChangeDetails;
declare const numberInput_ValueInvalidDetails: typeof ValueInvalidDetails;
declare namespace numberInput {
  export { NumberInputContext as Context, type NumberInputContextProps as ContextProps, NumberInputControl as Control, type NumberInputControlBaseProps as ControlBaseProps, type NumberInputControlProps as ControlProps, NumberInputDecrementTrigger as DecrementTrigger, type NumberInputDecrementTriggerBaseProps as DecrementTriggerBaseProps, type NumberInputDecrementTriggerProps as DecrementTriggerProps, numberInput_FocusChangeDetails as FocusChangeDetails, NumberInputIncrementTrigger as IncrementTrigger, type NumberInputIncrementTriggerBaseProps as IncrementTriggerBaseProps, type NumberInputIncrementTriggerProps as IncrementTriggerProps, NumberInputInput as Input, type NumberInputInputBaseProps as InputBaseProps, type NumberInputInputProps as InputProps, NumberInputLabel as Label, type NumberInputLabelBaseProps as LabelBaseProps, type NumberInputLabelProps as LabelProps, NumberInputRoot as Root, type NumberInputRootBaseProps as RootBaseProps, type NumberInputRootProps as RootProps, NumberInputRootProvider as RootProvider, type NumberInputRootProviderBaseProps as RootProviderBaseProps, type NumberInputRootProviderProps as RootProviderProps, NumberInputScrubber as Scrubber, type NumberInputScrubberBaseProps as ScrubberBaseProps, type NumberInputScrubberProps as ScrubberProps, numberInput_ValueChangeDetails as ValueChangeDetails, numberInput_ValueInvalidDetails as ValueInvalidDetails, NumberInputValueText as ValueText, type NumberInputValueTextBaseProps as ValueTextBaseProps, type NumberInputValueTextProps as ValueTextProps };
}

export { numberInput as NumberInput, NumberInputContext, type NumberInputContextProps, NumberInputControl, type NumberInputControlBaseProps, type NumberInputControlProps, NumberInputDecrementTrigger, type NumberInputDecrementTriggerBaseProps, type NumberInputDecrementTriggerProps, NumberInputIncrementTrigger, type NumberInputIncrementTriggerBaseProps, type NumberInputIncrementTriggerProps, NumberInputInput, type NumberInputInputBaseProps, type NumberInputInputProps, NumberInputLabel, type NumberInputLabelBaseProps, type NumberInputLabelProps, NumberInputRoot, type NumberInputRootBaseProps, type NumberInputRootProps, NumberInputRootProvider, type NumberInputRootProviderBaseProps, type NumberInputRootProviderProps, NumberInputScrubber, type NumberInputScrubberBaseProps, type NumberInputScrubberProps, NumberInputValueText, type NumberInputValueTextBaseProps, type NumberInputValueTextProps, type UseNumberInputContext, type UseNumberInputProps, type UseNumberInputReturn, useNumberInput, useNumberInputContext };
