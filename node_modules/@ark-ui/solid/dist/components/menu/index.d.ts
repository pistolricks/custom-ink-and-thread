import * as menu$1 from '@zag-js/menu';
import { OptionItemProps, ItemProps, OptionItemState, ItemGroupProps, HighlightChangeDetails, OpenChangeDetails, SelectionDetails } from '@zag-js/menu';
export { HighlightChangeDetails as MenuHighlightChangeDetails, OpenChangeDetails as MenuOpenChangeDetails, SelectionDetails as MenuSelectionDetails, anatomy as menuAnatomy } from '@zag-js/menu';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import * as _zag_js_solid from '@zag-js/solid';
import { PropTypes } from '@zag-js/solid';
import { O as Optional } from '../../types-B277wCdv.js';
import { U as UsePresenceProps } from '../../use-presence-Ct1onT3-.js';
import '@zag-js/presence';
import '../../render-strategy-B5MqQP3X.js';

interface MenuArrowBaseProps extends PolymorphicProps<'div'> {
}
interface MenuArrowProps extends HTMLProps<'div'>, MenuArrowBaseProps {
}
declare const MenuArrow: (props: MenuArrowProps) => solid_js.JSX.Element;

interface MenuArrowTipBaseProps extends PolymorphicProps<'div'> {
}
interface MenuArrowTipProps extends HTMLProps<'div'>, MenuArrowTipBaseProps {
}
declare const MenuArrowTip: (props: MenuArrowTipProps) => solid_js.JSX.Element;

type PartialOptionItemProps$1 = Omit<OptionItemProps, 'type'>;
interface MenuCheckboxItemBaseProps extends PartialOptionItemProps$1, PolymorphicProps<'div'> {
}
interface MenuCheckboxItemProps extends HTMLProps<'div'>, MenuCheckboxItemBaseProps {
}
declare const MenuCheckboxItem: (props: MenuCheckboxItemProps) => solid_js.JSX.Element;

interface MenuContentBaseProps extends PolymorphicProps<'div'> {
}
interface MenuContentProps extends HTMLProps<'div'>, MenuContentBaseProps {
}
declare const MenuContent: (props: MenuContentProps) => solid_js.JSX.Element;

interface UseMenuProps extends Optional<Omit<menu$1.Context, 'dir' | 'getRootNode' | 'open.controlled'>, 'id'> {
    /**
     * The initial open state of the menu when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: menu$1.Context['open'];
}
interface UseMenuReturn {
    machine: menu$1.Service;
    api: Accessor<menu$1.Api<PropTypes>>;
}
declare const useMenu: (props?: UseMenuProps) => UseMenuReturn;

type UseMenuContext = UseMenuReturn['api'];
declare const useMenuContext: () => solid_js.Accessor<menu$1.Api<_zag_js_solid.PropTypes>>;

interface MenuContextProps {
    children: (context: UseMenuContext) => JSX.Element;
}
declare const MenuContext: (props: MenuContextProps) => JSX.Element;

interface MenuContextTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface MenuContextTriggerProps extends HTMLProps<'button'>, MenuContextTriggerBaseProps {
}
declare const MenuContextTrigger: (props: MenuContextTriggerProps) => solid_js.JSX.Element;

interface MenuIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface MenuIndicatorProps extends HTMLProps<'div'>, MenuIndicatorBaseProps {
}
declare const MenuIndicator: (props: MenuIndicatorProps) => solid_js.JSX.Element;

interface MenuItemBaseProps extends ItemProps, PolymorphicProps<'div'> {
}
interface MenuItemProps extends HTMLProps<'div'>, MenuItemBaseProps {
}
declare const MenuItem: (props: MenuItemProps) => solid_js.JSX.Element;

interface UseMenuItemContext extends Accessor<Optional<OptionItemState, 'checked'>> {
}
declare const useMenuItemContext: () => UseMenuItemContext;

interface MenuItemContextProps {
    children: (context: UseMenuItemContext) => JSX.Element;
}
declare const MenuItemContext: (props: MenuItemContextProps) => JSX.Element;

type OptionalItemGroupProps = Optional<ItemGroupProps, 'id'>;
interface MenuItemGroupBaseProps extends OptionalItemGroupProps, PolymorphicProps<'div'> {
}
interface MenuItemGroupProps extends HTMLProps<'div'>, MenuItemGroupBaseProps {
}
declare const MenuItemGroup: (props: MenuItemGroupProps) => solid_js.JSX.Element;

interface MenuItemGroupLabelBaseProps extends PolymorphicProps<'div'> {
}
interface MenuItemGroupLabelProps extends HTMLProps<'div'>, MenuItemGroupLabelBaseProps {
}
declare const MenuItemGroupLabel: (props: MenuItemGroupLabelProps) => solid_js.JSX.Element;

interface MenuItemIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface MenuItemIndicatorProps extends HTMLProps<'div'>, MenuItemIndicatorBaseProps {
}
declare const MenuItemIndicator: (props: MenuItemIndicatorProps) => solid_js.JSX.Element;

interface MenuItemTextBaseProps extends PolymorphicProps<'div'> {
}
interface MenuItemTextProps extends HTMLProps<'div'>, MenuItemTextBaseProps {
}
declare const MenuItemText: (props: MenuItemTextProps) => solid_js.JSX.Element;

interface MenuPositionerBaseProps extends PolymorphicProps<'div'> {
}
interface MenuPositionerProps extends HTMLProps<'div'>, MenuPositionerBaseProps {
}
declare const MenuPositioner: (props: MenuPositionerProps) => solid_js.JSX.Element;

type PartialOptionItemProps = Omit<OptionItemProps, 'type' | 'checked' | 'onCheckedChange'>;
interface MenuRadioItemBaseProps extends PartialOptionItemProps, PolymorphicProps<'div'> {
}
interface MenuRadioItemProps extends HTMLProps<'div'>, MenuRadioItemBaseProps {
}
declare const MenuRadioItem: (props: MenuRadioItemProps) => solid_js.JSX.Element;

interface ValueChangeDetails {
    value: string;
}
interface UseMenuItemGroupContext {
    id: string;
    value?: string;
    onValueChange?: (e: ValueChangeDetails) => void;
}

type OptionalUseMenuItemGroupContext = Optional<UseMenuItemGroupContext, 'id'>;
interface MenuRadioItemGroupBaseProps extends OptionalUseMenuItemGroupContext, PolymorphicProps<'div'> {
}
interface MenuRadioItemGroupProps extends HTMLProps<'div'>, MenuRadioItemGroupBaseProps {
}
declare const MenuRadioItemGroup: (props: MenuRadioItemGroupProps) => solid_js.JSX.Element;

interface MenuRootBaseProps extends UseMenuProps, UsePresenceProps {
}
interface MenuRootProps extends MenuRootBaseProps {
    children?: JSX.Element;
}
declare const MenuRoot: (props: MenuRootProps) => JSX.Element;

interface RootProviderProps {
    value: UseMenuReturn;
}
interface MenuRootProviderBaseProps extends RootProviderProps, UsePresenceProps {
}
interface MenuRootProviderProps extends MenuRootProviderBaseProps {
    children?: JSX.Element;
}
declare const MenuRootProvider: (props: MenuRootProviderProps) => JSX.Element;

interface MenuSeparatorBaseProps extends PolymorphicProps<'hr'> {
}
interface MenuSeparatorProps extends HTMLProps<'hr'>, MenuSeparatorBaseProps {
}
declare const MenuSeparator: (props: MenuSeparatorProps) => solid_js.JSX.Element;

interface MenuTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface MenuTriggerProps extends HTMLProps<'button'>, MenuTriggerBaseProps {
}
declare const MenuTrigger: (props: MenuTriggerProps) => solid_js.JSX.Element;

interface MenuTriggerItemBaseProps extends PolymorphicProps<'div'> {
}
interface MenuTriggerItemProps extends HTMLProps<'div'>, MenuTriggerItemBaseProps {
}
declare const MenuTriggerItem: (props: MenuTriggerItemProps) => solid_js.JSX.Element;

declare const menu_HighlightChangeDetails: typeof HighlightChangeDetails;
declare const menu_OpenChangeDetails: typeof OpenChangeDetails;
declare const menu_SelectionDetails: typeof SelectionDetails;
type menu_ValueChangeDetails = ValueChangeDetails;
declare namespace menu {
  export { MenuArrow as Arrow, type MenuArrowBaseProps as ArrowBaseProps, type MenuArrowProps as ArrowProps, MenuArrowTip as ArrowTip, type MenuArrowTipBaseProps as ArrowTipBaseProps, type MenuArrowTipProps as ArrowTipProps, MenuCheckboxItem as CheckboxItem, type MenuCheckboxItemBaseProps as CheckboxItemBaseProps, type MenuCheckboxItemProps as CheckboxItemProps, MenuContent as Content, type MenuContentBaseProps as ContentBaseProps, type MenuContentProps as ContentProps, MenuContext as Context, type MenuContextProps as ContextProps, MenuContextTrigger as ContextTrigger, type MenuContextTriggerBaseProps as ContextTriggerBaseProps, type MenuContextTriggerProps as ContextTriggerProps, menu_HighlightChangeDetails as HighlightChangeDetails, MenuIndicator as Indicator, type MenuIndicatorBaseProps as IndicatorBaseProps, type MenuIndicatorProps as IndicatorProps, MenuItem as Item, type MenuItemBaseProps as ItemBaseProps, MenuItemContext as ItemContext, type MenuItemContextProps as ItemContextProps, MenuItemGroup as ItemGroup, type MenuItemGroupBaseProps as ItemGroupBaseProps, MenuItemGroupLabel as ItemGroupLabel, type MenuItemGroupLabelBaseProps as ItemGroupLabelBaseProps, type MenuItemGroupLabelProps as ItemGroupLabelProps, type MenuItemGroupProps as ItemGroupProps, MenuItemIndicator as ItemIndicator, type MenuItemIndicatorBaseProps as ItemIndicatorBaseProps, type MenuItemIndicatorProps as ItemIndicatorProps, type MenuItemProps as ItemProps, MenuItemText as ItemText, type MenuItemTextBaseProps as ItemTextBaseProps, type MenuItemTextProps as ItemTextProps, menu_OpenChangeDetails as OpenChangeDetails, MenuPositioner as Positioner, type MenuPositionerBaseProps as PositionerBaseProps, type MenuPositionerProps as PositionerProps, MenuRadioItem as RadioItem, type MenuRadioItemBaseProps as RadioItemBaseProps, MenuRadioItemGroup as RadioItemGroup, type MenuRadioItemGroupBaseProps as RadioItemGroupBaseProps, type MenuRadioItemGroupProps as RadioItemGroupProps, type MenuRadioItemProps as RadioItemProps, MenuRoot as Root, type MenuRootBaseProps as RootBaseProps, type MenuRootProps as RootProps, MenuRootProvider as RootProvider, type MenuRootProviderBaseProps as RootProviderBaseProps, type MenuRootProviderProps as RootProviderProps, menu_SelectionDetails as SelectionDetails, MenuSeparator as Separator, type MenuSeparatorBaseProps as SeparatorBaseProps, type MenuSeparatorProps as SeparatorProps, MenuTrigger as Trigger, type MenuTriggerBaseProps as TriggerBaseProps, MenuTriggerItem as TriggerItem, type MenuTriggerItemBaseProps as TriggerItemBaseProps, type MenuTriggerItemProps as TriggerItemProps, type MenuTriggerProps as TriggerProps, type menu_ValueChangeDetails as ValueChangeDetails };
}

export { menu as Menu, MenuArrow, type MenuArrowBaseProps, type MenuArrowProps, MenuArrowTip, type MenuArrowTipBaseProps, type MenuArrowTipProps, MenuCheckboxItem, type MenuCheckboxItemBaseProps, type MenuCheckboxItemProps, MenuContent, type MenuContentBaseProps, type MenuContentProps, MenuContext, type MenuContextProps, MenuContextTrigger, type MenuContextTriggerBaseProps, type MenuContextTriggerProps, MenuIndicator, type MenuIndicatorBaseProps, type MenuIndicatorProps, MenuItem, type MenuItemBaseProps, MenuItemContext, type MenuItemContextProps, MenuItemGroup, type MenuItemGroupBaseProps, MenuItemGroupLabel, type MenuItemGroupLabelBaseProps, type MenuItemGroupLabelProps, type MenuItemGroupProps, MenuItemIndicator, type MenuItemIndicatorBaseProps, type MenuItemIndicatorProps, type MenuItemProps, MenuItemText, type MenuItemTextBaseProps, type MenuItemTextProps, MenuPositioner, type MenuPositionerBaseProps, type MenuPositionerProps, MenuRadioItem, type MenuRadioItemBaseProps, MenuRadioItemGroup, type MenuRadioItemGroupBaseProps, type MenuRadioItemGroupProps, type MenuRadioItemProps, MenuRoot, type MenuRootBaseProps, type MenuRootProps, MenuRootProvider, type MenuRootProviderBaseProps, type MenuRootProviderProps, MenuSeparator, type MenuSeparatorBaseProps, type MenuSeparatorProps, MenuTrigger, type MenuTriggerBaseProps, MenuTriggerItem, type MenuTriggerItemBaseProps, type MenuTriggerItemProps, type MenuTriggerProps, type ValueChangeDetails as MenuValueChangeDetails, type UseMenuContext, type UseMenuItemContext, type UseMenuProps, type UseMenuReturn, useMenu, useMenuContext, useMenuItemContext };
