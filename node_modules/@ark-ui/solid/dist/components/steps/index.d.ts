import * as steps$1 from '@zag-js/steps';
import { ItemProps, ItemState, StepChangeDetails } from '@zag-js/steps';
export { StepChangeDetails, anatomy as stepsAnatomy } from '@zag-js/steps';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import { PropTypes } from '@zag-js/solid';
import { O as Optional } from '../../types-B277wCdv.js';

interface StepsCompletedContentBaseProps extends PolymorphicProps<'div'> {
}
interface StepsCompletedContentProps extends HTMLProps<'div'>, StepsCompletedContentBaseProps {
}
declare const StepsCompletedContent: (props: StepsCompletedContentProps) => solid_js.JSX.Element;

interface StepsContentBaseProps extends PolymorphicProps<'div'>, ItemProps {
}
interface StepsContentProps extends HTMLProps<'div'>, StepsContentBaseProps {
}
declare const StepsContent: (props: StepsContentProps) => solid_js.JSX.Element;

interface UseStepsProps extends Optional<Omit<steps$1.Context, 'dir' | 'getRootNode'>, 'id'> {
    /**
     * The initial value of the step
     */
    defaultStep?: number;
}
interface UseStepsReturn extends Accessor<steps$1.Api<PropTypes>> {
}
declare function useSteps(props?: UseStepsProps): UseStepsReturn;

interface UseStepsContext extends UseStepsReturn {
}
declare const useStepsContext: () => UseStepsContext;

interface StepsContextProps {
    children: (context: UseStepsContext) => JSX.Element;
}
declare const StepsContext: (props: StepsContextProps) => JSX.Element;

interface StepsIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface StepsIndicatorProps extends HTMLProps<'div'>, StepsIndicatorBaseProps {
}
declare const StepsIndicator: (props: StepsIndicatorProps) => solid_js.JSX.Element;

interface StepsItemBaseProps extends ItemProps, PolymorphicProps<'li'> {
}
interface StepsItemProps extends HTMLProps<'li'>, StepsItemBaseProps {
}
declare const StepsItem: (props: StepsItemProps) => solid_js.JSX.Element;

interface UseStepsItemContext extends Accessor<ItemState> {
}
declare const useStepsItemContext: () => UseStepsItemContext;

interface StepsItemContextProps {
    children: (context: UseStepsItemContext) => JSX.Element;
}
declare const StepsItemContext: {
    (props: StepsItemContextProps): JSX.Element;
    displayName: string;
};

interface StepsListBaseProps extends PolymorphicProps<'ol'> {
}
interface StepsListProps extends HTMLProps<'ol'>, StepsListBaseProps {
}
declare const StepsList: (props: StepsListProps) => solid_js.JSX.Element;

interface StepsNextTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface StepsNextTriggerProps extends HTMLProps<'button'>, StepsNextTriggerBaseProps {
}
declare const StepsNextTrigger: (props: StepsNextTriggerProps) => solid_js.JSX.Element;

interface StepsPrevTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface StepsPrevTriggerProps extends HTMLProps<'button'>, StepsPrevTriggerBaseProps {
}
declare const StepsPrevTrigger: (props: StepsPrevTriggerProps) => solid_js.JSX.Element;

interface StepsProgressBaseProps extends PolymorphicProps<'div'> {
}
interface StepsProgressProps extends HTMLProps<'div'>, StepsProgressBaseProps {
}
declare const StepsProgress: (props: StepsProgressProps) => solid_js.JSX.Element;

interface StepsRootBaseProps extends UseStepsProps, PolymorphicProps<'div'> {
}
interface StepsRootProps extends HTMLProps<'div'>, StepsRootBaseProps {
}
declare const StepsRoot: (props: StepsRootProps) => solid_js.JSX.Element;

interface RootProviderProps {
    value: UseStepsReturn;
}
interface StepsRootProviderBaseProps extends RootProviderProps, PolymorphicProps<'div'> {
}
interface StepsRootProviderProps extends HTMLProps<'div'>, StepsRootProviderBaseProps {
}
declare const StepsRootProvider: (props: StepsRootProviderProps) => solid_js.JSX.Element;

interface StepsSeparatorBaseProps extends PolymorphicProps<'div'> {
}
interface StepsSeparatorProps extends HTMLProps<'div'>, StepsSeparatorBaseProps {
}
declare const StepsSeparator: (props: StepsSeparatorProps) => solid_js.JSX.Element;

interface StepsTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface StepsTriggerProps extends HTMLProps<'button'>, StepsTriggerBaseProps {
}
declare const StepsTrigger: (props: StepsTriggerProps) => solid_js.JSX.Element;

declare namespace steps {
  export { StepChangeDetails as ChangeDetails, StepsCompletedContent as CompletedContent, type StepsCompletedContentBaseProps as CompletedContentBaseProps, type StepsCompletedContentProps as CompletedContentProps, StepsContent as Content, type StepsContentBaseProps as ContentBaseProps, type StepsContentProps as ContentProps, StepsContext as Context, type StepsContextProps as ContextProps, StepsIndicator as Indicator, type StepsIndicatorBaseProps as IndicatorBaseProps, type StepsIndicatorProps as IndicatorProps, StepsItem as Item, type StepsItemBaseProps as ItemBaseProps, StepsItemContext as ItemContext, type StepsItemContextProps as ItemContextProps, type StepsItemProps as ItemProps, StepsList as List, type StepsListBaseProps as ListBaseProps, type StepsListProps as ListProps, StepsNextTrigger as NextTrigger, type StepsNextTriggerBaseProps as NextTriggerBaseProps, type StepsNextTriggerProps as NextTriggerProps, StepsPrevTrigger as PrevTrigger, type StepsPrevTriggerBaseProps as PrevTriggerBaseProps, type StepsPrevTriggerProps as PrevTriggerProps, StepsProgress as Progress, type StepsProgressBaseProps as ProgressBaseProps, type StepsProgressProps as ProgressProps, StepsRoot as Root, type StepsRootBaseProps as RootBaseProps, type StepsRootProps as RootProps, StepsRootProvider as RootProvider, type StepsRootProviderBaseProps as RootProviderBaseProps, type StepsRootProviderProps as RootProviderProps, StepsSeparator as Separator, type StepsSeparatorBaseProps as SeparatorBaseProps, type StepsSeparatorProps as SeparatorProps, StepsTrigger as Trigger, type StepsTriggerBaseProps as TriggerBaseProps, type StepsTriggerProps as TriggerProps };
}

export { steps as Steps, StepsCompletedContent, type StepsCompletedContentBaseProps, type StepsCompletedContentProps, StepsContent, type StepsContentBaseProps, type StepsContentProps, StepsContext, type StepsContextProps, StepsIndicator, type StepsIndicatorBaseProps, type StepsIndicatorProps, StepsItem, type StepsItemBaseProps, StepsItemContext, type StepsItemContextProps, type StepsItemProps, StepsList, type StepsListBaseProps, type StepsListProps, StepsNextTrigger, type StepsNextTriggerBaseProps, type StepsNextTriggerProps, StepsPrevTrigger, type StepsPrevTriggerBaseProps, type StepsPrevTriggerProps, StepsProgress, type StepsProgressBaseProps, type StepsProgressProps, StepsRoot, type StepsRootBaseProps, type StepsRootProps, StepsRootProvider, type StepsRootProviderBaseProps, type StepsRootProviderProps, StepsSeparator, type StepsSeparatorBaseProps, type StepsSeparatorProps, StepsTrigger, type StepsTriggerBaseProps, type StepsTriggerProps, type UseStepsContext, type UseStepsItemContext, type UseStepsProps, type UseStepsReturn, useSteps, useStepsContext, useStepsItemContext };
