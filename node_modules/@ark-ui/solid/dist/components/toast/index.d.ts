import { PropTypes } from '@zag-js/solid';
import * as toast$1 from '@zag-js/toast';
export { anatomy as toastAnatomy } from '@zag-js/toast';
import * as solid_js from 'solid-js';
import { JSX, Accessor } from 'solid-js';
import { O as Optional, A as Assign } from '../../types-B277wCdv.js';
import { PolymorphicProps, HTMLProps } from '../factory.js';

interface CreateToasterProps extends Optional<Partial<toast$1.GroupMachineContext>, 'id'> {
    placement: toast$1.Placement;
}
interface CreateToasterReturn extends toast$1.GroupApi<PropTypes, JSX.Element> {
    machine: toast$1.GroupService<JSX.Element>;
}
declare const createToaster: (props: CreateToasterProps) => CreateToasterReturn;

interface ToastActionTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface ToastActionTriggerProps extends HTMLProps<'button'>, ToastActionTriggerBaseProps {
}
declare const ToastActionTrigger: (props: ToastActionTriggerProps) => solid_js.JSX.Element;

interface ToastCloseTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface ToastCloseTriggerProps extends HTMLProps<'button'>, ToastCloseTriggerBaseProps {
}
declare const ToastCloseTrigger: (props: ToastCloseTriggerProps) => solid_js.JSX.Element;

interface UseToastContext extends Accessor<toast$1.Api<PropTypes, JSX.Element>> {
}
declare const useToastContext: () => UseToastContext;

interface ToastContextProps {
    children: (context: UseToastContext) => JSX.Element;
}
declare const ToastContext: (props: ToastContextProps) => JSX.Element;

interface ToastDescriptionBaseProps extends PolymorphicProps<'div'> {
}
interface ToastDescriptionProps extends HTMLProps<'div'>, ToastDescriptionBaseProps {
}
declare const ToastDescription: (props: ToastDescriptionProps) => solid_js.JSX.Element;

interface ToastRootBaseProps extends PolymorphicProps<'div'> {
}
interface ToastRootProps extends HTMLProps<'div'>, ToastRootBaseProps {
}
declare const ToastRoot: (props: ToastRootProps) => solid_js.JSX.Element;

interface ToastTitleBaseProps extends PolymorphicProps<'div'> {
}
interface ToastTitleProps extends HTMLProps<'div'>, ToastTitleBaseProps {
}
declare const ToastTitle: (props: ToastTitleProps) => solid_js.JSX.Element;

interface ToasterBaseProps extends PolymorphicProps<'div'> {
    toaster: CreateToasterReturn;
    children: (toast: Accessor<toast$1.Options<JSX.Element>>) => JSX.Element;
}
interface ToasterProps extends Assign<HTMLProps<'div'>, ToasterBaseProps> {
}
declare const Toaster: (props: ToasterProps) => JSX.Element;

declare namespace toast {
  export { ToastActionTrigger as ActionTrigger, type ToastActionTriggerBaseProps as ActionTriggerBaseProps, type ToastActionTriggerProps as ActionTriggerProps, ToastCloseTrigger as CloseTrigger, type ToastCloseTriggerBaseProps as CloseTriggerBaseProps, type ToastCloseTriggerProps as CloseTriggerProps, ToastContext as Context, type ToastContextProps as ContextProps, ToastDescription as Description, type ToastDescriptionBaseProps as DescriptionBaseProps, type ToastDescriptionProps as DescriptionProps, ToastRoot as Root, type ToastRootBaseProps as RootBaseProps, type ToastRootProps as RootProps, ToastTitle as Title, type ToastTitleBaseProps as TitleBaseProps, type ToastTitleProps as TitleProps };
}

export { type CreateToasterProps, type CreateToasterReturn, toast as Toast, ToastActionTrigger, type ToastActionTriggerBaseProps, type ToastActionTriggerProps, ToastCloseTrigger, type ToastCloseTriggerBaseProps, type ToastCloseTriggerProps, ToastContext, type ToastContextProps, ToastDescription, type ToastDescriptionBaseProps, type ToastDescriptionProps, ToastRoot, type ToastRootBaseProps, type ToastRootProps, ToastTitle, type ToastTitleBaseProps, type ToastTitleProps, Toaster, type ToasterBaseProps, type ToasterProps, type UseToastContext, createToaster, useToastContext };
