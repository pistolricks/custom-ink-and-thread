export { parseTime } from '@internationalized/date';
import * as timePicker$1 from '@zag-js/time-picker';
import { TimePeriod, ColumnProps, FocusChangeDetails, OpenChangeDetails, ValueChangeDetails } from '@zag-js/time-picker';
export { FocusChangeDetails as TimePickerFocusChangeDetails, OpenChangeDetails as TimePickerOpenChangeDetails, ValueChangeDetails as TimePickerValueChangeDetails, anatomy as timePickerAnatomy } from '@zag-js/time-picker';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { A as Assign, O as Optional } from '../../types-B277wCdv.js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import { PropTypes } from '@zag-js/solid';
import { U as UsePresenceProps } from '../../use-presence-Ct1onT3-.js';
import '@zag-js/presence';
import '../../render-strategy-B5MqQP3X.js';

interface CombinedCellProps {
    value: number | TimePeriod;
}
interface TimePickerCellBaseProps extends CombinedCellProps, PolymorphicProps<'button'> {
}
interface TimePickerCellProps extends Assign<HTMLProps<'button'>, TimePickerCellBaseProps> {
}
declare const TimePickerCell: (props: TimePickerCellProps) => solid_js.JSX.Element;

interface TimePickerClearTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface TimePickerClearTriggerProps extends Assign<HTMLProps<'button'>, TimePickerClearTriggerBaseProps> {
}
declare const TimePickerClearTrigger: (props: TimePickerClearTriggerProps) => solid_js.JSX.Element;

interface TimePickerColumnBaseProps extends ColumnProps, PolymorphicProps<'div'> {
}
interface TimePickerColumnProps extends Assign<HTMLProps<'div'>, TimePickerColumnBaseProps> {
}
declare const TimePickerColumn: (props: TimePickerColumnProps) => solid_js.JSX.Element;

interface TimePickerContentBaseProps extends PolymorphicProps<'div'> {
}
interface TimePickerContentProps extends Assign<HTMLProps<'div'>, TimePickerContentBaseProps> {
}
declare const TimePickerContent: (props: TimePickerContentProps) => solid_js.JSX.Element;

interface UseTimePickerProps extends Optional<Omit<timePicker$1.Context, 'dir' | 'getRootNode' | 'open.controlled'>, 'id'> {
    /**
     * The initial open state of the time picker when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: timePicker$1.Context['open'];
    /**
     * The initial value of the time picker when it is first rendered.
     * Use when you do not need to control the state of the time picker.
     */
    defaultValue?: timePicker$1.Context['value'];
}
interface UseTimePickerReturn extends Accessor<timePicker$1.Api<PropTypes>> {
}
declare const useTimePicker: (props?: UseTimePickerProps) => UseTimePickerReturn;

interface UseTimePickerContext extends UseTimePickerReturn {
}
declare const useTimePickerContext: () => UseTimePickerContext;

interface TimePickerContextProps {
    children: (context: UseTimePickerContext) => JSX.Element;
}
declare const TimePickerContext: (props: TimePickerContextProps) => JSX.Element;

interface TimePickerControlBaseProps extends PolymorphicProps<'div'> {
}
interface TimePickerControlProps extends Assign<HTMLProps<'div'>, TimePickerControlBaseProps> {
}
declare const TimePickerControl: (props: TimePickerControlProps) => solid_js.JSX.Element;

interface TimePickerInputBaseProps extends PolymorphicProps<'input'> {
}
interface TimePickerInputProps extends Assign<HTMLProps<'input'>, TimePickerInputBaseProps> {
}
declare const TimePickerInput: (props: TimePickerInputProps) => solid_js.JSX.Element;

interface TimePickerLabelBaseProps extends PolymorphicProps<'label'> {
}
interface TimePickerLabelProps extends Assign<HTMLProps<'label'>, TimePickerLabelBaseProps> {
}
declare const TimePickerLabel: (props: TimePickerLabelProps) => solid_js.JSX.Element;

interface TimePickerPositionerBaseProps extends PolymorphicProps<'div'> {
}
interface TimePickerPositionerProps extends HTMLProps<'div'>, TimePickerPositionerBaseProps {
}
declare const TimePickerPositioner: (props: TimePickerPositionerProps) => solid_js.JSX.Element;

interface TimePickerRootBaseProps extends UseTimePickerProps, UsePresenceProps, PolymorphicProps<'div'> {
}
interface TimePickerRootProps extends Assign<HTMLProps<'div'>, TimePickerRootBaseProps> {
}
declare const TimePickerRoot: (props: TimePickerRootProps) => solid_js.JSX.Element;

interface RootProviderProps {
    value: UseTimePickerReturn;
}
interface TimePickerRootProviderBaseProps extends RootProviderProps, UsePresenceProps, PolymorphicProps<'div'> {
}
interface TimePickerRootProviderProps extends HTMLProps<'div'>, TimePickerRootProviderBaseProps {
}
declare const TimePickerRootProvider: (props: TimePickerRootProviderProps) => solid_js.JSX.Element;

interface TimePickerSpacerBaseProps extends PolymorphicProps<'div'> {
}
interface TimePickerSpacerProps extends Assign<HTMLProps<'div'>, TimePickerSpacerBaseProps> {
}
declare const TimePickerSpacer: (props: TimePickerSpacerProps) => solid_js.JSX.Element;

interface TimePickerTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface TimePickerTriggerProps extends Assign<HTMLProps<'button'>, TimePickerTriggerBaseProps> {
}
declare const TimePickerTrigger: (props: TimePickerTriggerProps) => solid_js.JSX.Element;

declare const timePicker_FocusChangeDetails: typeof FocusChangeDetails;
declare const timePicker_OpenChangeDetails: typeof OpenChangeDetails;
declare const timePicker_ValueChangeDetails: typeof ValueChangeDetails;
declare namespace timePicker {
  export { TimePickerCell as Cell, type TimePickerCellBaseProps as CellBaseProps, type TimePickerCellProps as CellProps, TimePickerClearTrigger as ClearTrigger, type TimePickerClearTriggerBaseProps as ClearTriggerBaseProps, type TimePickerClearTriggerProps as ClearTriggerProps, TimePickerColumn as Column, type TimePickerColumnBaseProps as ColumnBaseProps, type TimePickerColumnProps as ColumnProps, TimePickerContent as Content, type TimePickerContentBaseProps as ContentBaseProps, type TimePickerContentProps as ContentProps, TimePickerContext as Context, type TimePickerContextProps as ContextProps, TimePickerControl as Control, type TimePickerControlBaseProps as ControlBaseProps, type TimePickerControlProps as ControlProps, timePicker_FocusChangeDetails as FocusChangeDetails, TimePickerInput as Input, type TimePickerInputBaseProps as InputBaseProps, type TimePickerInputProps as InputProps, TimePickerLabel as Label, type TimePickerLabelBaseProps as LabelBaseProps, type TimePickerLabelProps as LabelProps, timePicker_OpenChangeDetails as OpenChangeDetails, TimePickerPositioner as Positioner, type TimePickerPositionerBaseProps as PositionerBaseProps, type TimePickerPositionerProps as PositionerProps, TimePickerRoot as Root, type TimePickerRootBaseProps as RootBaseProps, type TimePickerRootProps as RootProps, TimePickerRootProvider as RootProvider, type TimePickerRootProviderBaseProps as RootProviderBaseProps, type TimePickerRootProviderProps as RootProviderProps, TimePickerSpacer as Spacer, type TimePickerSpacerBaseProps as SpacerBaseProps, type TimePickerSpacerProps as SpacerProps, TimePickerTrigger as Trigger, type TimePickerTriggerBaseProps as TriggerBaseProps, type TimePickerTriggerProps as TriggerProps, timePicker_ValueChangeDetails as ValueChangeDetails };
}

export { timePicker as TimePicker, TimePickerCell, type TimePickerCellBaseProps, type TimePickerCellProps, TimePickerClearTrigger, type TimePickerClearTriggerBaseProps, type TimePickerClearTriggerProps, TimePickerColumn, type TimePickerColumnBaseProps, type TimePickerColumnProps, TimePickerContent, type TimePickerContentBaseProps, type TimePickerContentProps, TimePickerContext, type TimePickerContextProps, TimePickerControl, type TimePickerControlBaseProps, type TimePickerControlProps, TimePickerInput, type TimePickerInputBaseProps, type TimePickerInputProps, TimePickerLabel, type TimePickerLabelBaseProps, type TimePickerLabelProps, TimePickerPositioner, type TimePickerPositionerBaseProps, type TimePickerPositionerProps, TimePickerRoot, type TimePickerRootBaseProps, type TimePickerRootProps, TimePickerRootProvider, type TimePickerRootProviderBaseProps, type TimePickerRootProviderProps, TimePickerSpacer, type TimePickerSpacerBaseProps, type TimePickerSpacerProps, TimePickerTrigger, type TimePickerTriggerBaseProps, type TimePickerTriggerProps, type UseTimePickerContext, type UseTimePickerProps, type UseTimePickerReturn, useTimePicker, useTimePickerContext };
