import * as radio from '@zag-js/radio-group';
import { ItemProps, ItemState, ValueChangeDetails } from '@zag-js/radio-group';
export { ValueChangeDetails as SegmentGroupValueChangeDetails } from '@zag-js/radio-group';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PropTypes } from '@zag-js/solid';
import { O as Optional } from '../../types-B277wCdv.js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import * as _zag_js_anatomy from '@zag-js/anatomy';

interface UseSegmentGroupProps extends Optional<Omit<radio.Context, 'dir' | 'getRootNode'>, 'id'> {
    /**
     * The initial value of the segment group when it is first rendered.
     * Use when you do not need to control the state of the segment group.
     */
    defaultValue?: radio.Context['value'];
}
interface UseSegmentGroupReturn extends Accessor<radio.Api<PropTypes>> {
}
declare const useSegmentGroup: (props?: UseSegmentGroupProps) => UseSegmentGroupReturn;

interface UseSegmentGroupContext extends UseSegmentGroupReturn {
}
declare const useSegmentGroupContext: () => UseSegmentGroupContext;

interface SegmentGroupContextProps {
    children: (context: UseSegmentGroupContext) => JSX.Element;
}
declare const SegmentGroupContext: (props: SegmentGroupContextProps) => JSX.Element;

interface SegmentGroupIndicatorBaseProps extends PolymorphicProps<'div'> {
}
interface SegmentGroupIndicatorProps extends HTMLProps<'div'>, SegmentGroupIndicatorBaseProps {
}
declare const SegmentGroupIndicator: (props: SegmentGroupIndicatorProps) => solid_js.JSX.Element;

interface SegmentGroupItemBaseProps extends ItemProps, PolymorphicProps<'label'> {
}
interface SegmentGroupItemProps extends HTMLProps<'label'>, SegmentGroupItemBaseProps {
}
declare const SegmentGroupItem: (props: SegmentGroupItemProps) => solid_js.JSX.Element;

interface UseSegmentGroupItemContext extends Accessor<ItemState> {
}
declare const useSegmentGroupItemContext: () => UseSegmentGroupItemContext;

interface SegmentGroupItemContextProps {
    children: (context: UseSegmentGroupItemContext) => JSX.Element;
}
declare const SegmentGroupItemContext: (props: SegmentGroupItemContextProps) => JSX.Element;

interface SegmentGroupItemControlBaseProps extends PolymorphicProps<'div'> {
}
interface SegmentGroupItemControlProps extends HTMLProps<'div'>, SegmentGroupItemControlBaseProps {
}
declare const SegmentGroupItemControl: (props: SegmentGroupItemControlProps) => solid_js.JSX.Element;

interface SegmentGroupItemHiddenInputBaseProps extends PolymorphicProps<'input'> {
}
interface SegmentGroupItemHiddenInputProps extends HTMLProps<'input'>, SegmentGroupItemHiddenInputBaseProps {
}
declare const SegmentGroupItemHiddenInput: (props: SegmentGroupItemHiddenInputProps) => solid_js.JSX.Element;

interface SegmentGroupItemTextBaseProps extends PolymorphicProps<'span'> {
}
interface SegmentGroupItemTextProps extends HTMLProps<'span'>, SegmentGroupItemTextBaseProps {
}
declare const SegmentGroupItemText: (props: SegmentGroupItemTextProps) => solid_js.JSX.Element;

interface SegmentGroupLabelBaseProps extends PolymorphicProps<'label'> {
}
interface SegmentGroupLabelProps extends HTMLProps<'label'>, SegmentGroupLabelBaseProps {
}
declare const SegmentGroupLabel: (props: SegmentGroupLabelProps) => solid_js.JSX.Element;

interface SegmentGroupRootBaseProps extends UseSegmentGroupProps, PolymorphicProps<'div'> {
}
interface SegmentGroupRootProps extends HTMLProps<'div'>, SegmentGroupRootBaseProps {
}
declare const SegmentGroupRoot: (props: SegmentGroupRootProps) => solid_js.JSX.Element;

interface RootProviderProps {
    value: UseSegmentGroupReturn;
}
interface SegmentGroupRootProviderBaseProps extends PolymorphicProps<'div'> {
}
interface SegmentGroupRootProviderProps extends HTMLProps<'div'>, RootProviderProps, SegmentGroupRootProviderBaseProps {
}
declare const SegmentGroupRootProvider: (props: SegmentGroupRootProviderProps) => solid_js.JSX.Element;

declare const segmentGroupAnatomy: _zag_js_anatomy.Anatomy<"label" | "root" | "indicator" | "item" | "itemText" | "itemControl">;

declare const segmentGroup_ValueChangeDetails: typeof ValueChangeDetails;
declare namespace segmentGroup {
  export { SegmentGroupContext as Context, type SegmentGroupContextProps as ContextProps, SegmentGroupIndicator as Indicator, type SegmentGroupIndicatorBaseProps as IndicatorBaseProps, type SegmentGroupIndicatorProps as IndicatorProps, SegmentGroupItem as Item, type SegmentGroupItemBaseProps as ItemBaseProps, SegmentGroupItemContext as ItemContext, type SegmentGroupItemContextProps as ItemContextProps, SegmentGroupItemControl as ItemControl, type SegmentGroupItemControlBaseProps as ItemControlBaseProps, type SegmentGroupItemControlProps as ItemControlProps, SegmentGroupItemHiddenInput as ItemHiddenInput, type SegmentGroupItemHiddenInputBaseProps as ItemHiddenInputBaseProps, type SegmentGroupItemHiddenInputProps as ItemHiddenInputProps, type SegmentGroupItemProps as ItemProps, SegmentGroupItemText as ItemText, type SegmentGroupItemTextBaseProps as ItemTextBaseProps, type SegmentGroupItemTextProps as ItemTextProps, SegmentGroupLabel as Label, type SegmentGroupLabelBaseProps as LabelBaseProps, type SegmentGroupLabelProps as LabelProps, SegmentGroupRoot as Root, type SegmentGroupRootBaseProps as RootBaseProps, type SegmentGroupRootProps as RootProps, SegmentGroupRootProvider as RootProvider, type SegmentGroupRootProviderBaseProps as RootProviderBaseProps, type SegmentGroupRootProviderProps as RootProviderProps, segmentGroup_ValueChangeDetails as ValueChangeDetails };
}

export { segmentGroup as SegmentGroup, SegmentGroupContext, type SegmentGroupContextProps, SegmentGroupIndicator, type SegmentGroupIndicatorBaseProps, type SegmentGroupIndicatorProps, SegmentGroupItem, type SegmentGroupItemBaseProps, SegmentGroupItemContext, type SegmentGroupItemContextProps, SegmentGroupItemControl, type SegmentGroupItemControlBaseProps, type SegmentGroupItemControlProps, SegmentGroupItemHiddenInput, type SegmentGroupItemHiddenInputBaseProps, type SegmentGroupItemHiddenInputProps, type SegmentGroupItemProps, SegmentGroupItemText, type SegmentGroupItemTextBaseProps, type SegmentGroupItemTextProps, SegmentGroupLabel, type SegmentGroupLabelBaseProps, type SegmentGroupLabelProps, SegmentGroupRoot, type SegmentGroupRootBaseProps, type SegmentGroupRootProps, SegmentGroupRootProvider, type SegmentGroupRootProviderBaseProps, type SegmentGroupRootProviderProps, type UseSegmentGroupContext, type UseSegmentGroupItemContext, type UseSegmentGroupProps, type UseSegmentGroupReturn, segmentGroupAnatomy, useSegmentGroup, useSegmentGroupContext, useSegmentGroupItemContext };
