import * as hoverCard$1 from '@zag-js/hover-card';
import { OpenChangeDetails } from '@zag-js/hover-card';
export { OpenChangeDetails as HoverCardOpenChangeDetails, anatomy as hoverCardAnatomy } from '@zag-js/hover-card';
import * as solid_js from 'solid-js';
import { Accessor, JSX } from 'solid-js';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import { PropTypes } from '@zag-js/solid';
import { O as Optional } from '../../types-B277wCdv.js';
import { U as UsePresenceProps } from '../../use-presence-Ct1onT3-.js';
import '@zag-js/presence';
import '../../render-strategy-B5MqQP3X.js';

interface HoverCardArrowBaseProps extends PolymorphicProps<'div'> {
}
interface HoverCardArrowProps extends HTMLProps<'div'>, HoverCardArrowBaseProps {
}
declare const HoverCardArrow: (props: HoverCardArrowProps) => solid_js.JSX.Element;

interface HoverCardArrowTipBaseProps extends PolymorphicProps<'div'> {
}
interface HoverCardArrowTipProps extends HTMLProps<'div'>, HoverCardArrowTipBaseProps {
}
declare const HoverCardArrowTip: (props: HoverCardArrowTipProps) => solid_js.JSX.Element;

interface HoverCardContentBaseProps extends PolymorphicProps<'div'> {
}
interface HoverCardContentProps extends HTMLProps<'div'>, HoverCardContentBaseProps {
}
declare const HoverCardContent: (props: HoverCardContentProps) => solid_js.JSX.Element;

interface UseHoverCardProps extends Optional<Omit<hoverCard$1.Context, 'dir' | 'getRootNode' | 'open.controlled'>, 'id'> {
    /**
     * The initial open state of the hover card when it is first rendered.
     * Use when you do not need to control its open state.
     */
    defaultOpen?: hoverCard$1.Context['open'];
}
interface UseHoverCardReturn extends Accessor<hoverCard$1.Api<PropTypes>> {
}
declare const useHoverCard: (props?: UseHoverCardProps) => UseHoverCardReturn;

interface UseHoverCardContext extends UseHoverCardReturn {
}
declare const useHoverCardContext: () => UseHoverCardContext;

interface HoverCardContextProps {
    children: (context: UseHoverCardContext) => JSX.Element;
}
declare const HoverCardContext: (props: HoverCardContextProps) => JSX.Element;

interface HoverCardPositionerBaseProps extends PolymorphicProps<'div'> {
}
interface HoverCardPositionerProps extends HTMLProps<'div'>, HoverCardPositionerBaseProps {
}
declare const HoverCardPositioner: (props: HoverCardPositionerProps) => solid_js.JSX.Element;

interface HoverCardRootBaseProps extends UseHoverCardProps, UsePresenceProps {
}
interface HoverCardRootProps extends HoverCardRootBaseProps {
    children?: JSX.Element;
}
declare const HoverCardRoot: (props: HoverCardRootProps) => JSX.Element;

interface RootProviderProps {
    value: UseHoverCardReturn;
}
interface HoverCardRootProviderBaseProps extends RootProviderProps, UsePresenceProps {
}
interface HoverCardRootProviderProps extends HoverCardRootProviderBaseProps {
    children?: JSX.Element;
}
declare const HoverCardRootProvider: (props: HoverCardRootProviderProps) => JSX.Element;

interface HoverCardTriggerBaseProps extends PolymorphicProps<'button'> {
}
interface HoverCardTriggerProps extends HTMLProps<'button'>, HoverCardTriggerBaseProps {
}
declare const HoverCardTrigger: (props: HoverCardTriggerProps) => solid_js.JSX.Element;

declare const hoverCard_OpenChangeDetails: typeof OpenChangeDetails;
declare namespace hoverCard {
  export { HoverCardArrow as Arrow, type HoverCardArrowBaseProps as ArrowBaseProps, type HoverCardArrowProps as ArrowProps, HoverCardArrowTip as ArrowTip, type HoverCardArrowTipBaseProps as ArrowTipBaseProps, type HoverCardArrowTipProps as ArrowTipProps, HoverCardContent as Content, type HoverCardContentBaseProps as ContentBaseProps, type HoverCardContentProps as ContentProps, HoverCardContext as Context, type HoverCardContextProps as ContextProps, hoverCard_OpenChangeDetails as OpenChangeDetails, HoverCardPositioner as Positioner, type HoverCardPositionerBaseProps as PositionerBaseProps, type HoverCardPositionerProps as PositionerProps, HoverCardRoot as Root, type HoverCardRootBaseProps as RootBaseProps, type HoverCardRootProps as RootProps, HoverCardRootProvider as RootProvider, type HoverCardRootProviderBaseProps as RootProviderBaseProps, type HoverCardRootProviderProps as RootProviderProps, HoverCardTrigger as Trigger, type HoverCardTriggerBaseProps as TriggerBaseProps, type HoverCardTriggerProps as TriggerProps };
}

export { hoverCard as HoverCard, HoverCardArrow, type HoverCardArrowBaseProps, type HoverCardArrowProps, HoverCardArrowTip, type HoverCardArrowTipBaseProps, type HoverCardArrowTipProps, HoverCardContent, type HoverCardContentBaseProps, type HoverCardContentProps, HoverCardContext, type HoverCardContextProps, HoverCardPositioner, type HoverCardPositionerBaseProps, type HoverCardPositionerProps, HoverCardRoot, type HoverCardRootBaseProps, type HoverCardRootProps, HoverCardRootProvider, type HoverCardRootProviderBaseProps, type HoverCardRootProviderProps, HoverCardTrigger, type HoverCardTriggerBaseProps, type HoverCardTriggerProps, type UseHoverCardContext, type UseHoverCardProps, type UseHoverCardReturn, useHoverCard, useHoverCardContext };
