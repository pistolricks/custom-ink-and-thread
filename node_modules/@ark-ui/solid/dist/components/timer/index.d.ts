import * as solid_js from 'solid-js';
import { Accessor } from 'solid-js';
import * as timer$1 from '@zag-js/timer';
import { ActionTriggerProps, ItemProps, TickDetails } from '@zag-js/timer';
export { anatomy as timerAnatomy } from '@zag-js/timer';
import { PolymorphicProps, HTMLProps } from '../factory.js';
import { ReactNode } from 'react';
import { PropTypes } from '@zag-js/solid';
import { O as Optional } from '../../types-B277wCdv.js';

interface TimerActionTriggerBaseProps extends ActionTriggerProps, PolymorphicProps<'button'> {
}
interface TimerActionTriggerProps extends HTMLProps<'button'>, TimerActionTriggerBaseProps {
}
declare const TimerActionTrigger: (props: TimerActionTriggerProps) => solid_js.JSX.Element;

interface TimerAreaBaseProps extends PolymorphicProps<'div'> {
}
interface TimerAreaProps extends HTMLProps<'div'>, TimerAreaBaseProps {
}
declare const TimerArea: (props: TimerAreaProps) => solid_js.JSX.Element;

interface UseTimerProps extends Optional<Omit<timer$1.Context, 'dir' | 'getRootNode'>, 'id'> {
}
interface UseTimerReturn extends Accessor<timer$1.Api<PropTypes>> {
}
declare const useTimer: (props?: UseTimerProps) => UseTimerReturn;

interface UseTimerContext extends UseTimerReturn {
}
declare const useTimerContext: () => UseTimerContext;

interface TimerContextProps {
    children: (context: UseTimerContext) => ReactNode;
}
declare const TimerContext: (props: TimerContextProps) => ReactNode;

interface TimerControlBaseProps extends PolymorphicProps<'div'> {
}
interface TimerControlProps extends HTMLProps<'div'>, TimerControlBaseProps {
}
declare const TimerControl: (props: TimerControlProps) => solid_js.JSX.Element;

interface TimerItemBaseProps extends ItemProps, PolymorphicProps<'div'> {
}
interface TimerItemProps extends HTMLProps<'div'>, TimerItemBaseProps {
}
declare const TimerItem: (props: TimerItemProps) => solid_js.JSX.Element;

interface TimerRootBaseProps extends UseTimerProps, PolymorphicProps<'div'> {
}
interface TimerRootProps extends HTMLProps<'div'>, TimerRootBaseProps {
}
declare const TimerRoot: (props: TimerRootProps) => solid_js.JSX.Element;

interface RootProviderProps {
    value: UseTimerReturn;
}
interface TimerRootProviderBaseProps extends RootProviderProps, PolymorphicProps<'div'> {
}
interface TimerRootProviderProps extends HTMLProps<'div'>, TimerRootProviderBaseProps {
}
declare const TimerRootProvider: (props: TimerRootProviderProps) => solid_js.JSX.Element;

interface TimerSeparatorBaseProps extends PolymorphicProps<'div'> {
}
interface TimerSeparatorProps extends HTMLProps<'div'>, TimerSeparatorBaseProps {
}
declare const TimerSeparator: (props: TimerSeparatorProps) => solid_js.JSX.Element;

declare const timer_TickDetails: typeof TickDetails;
declare namespace timer {
  export { TimerActionTrigger as ActionTrigger, type TimerActionTriggerBaseProps as ActionTriggerBaseProps, type TimerActionTriggerProps as ActionTriggerProps, TimerArea as Area, type TimerAreaBaseProps as AreaBaseProps, type TimerAreaProps as AreaProps, TimerContext as Context, type TimerContextProps as ContextProps, TimerControl as Control, type TimerControlBaseProps as ControlBaseProps, type TimerControlProps as ControlProps, TimerItem as Item, type TimerItemBaseProps as ItemBaseProps, type TimerItemProps as ItemProps, TimerRoot as Root, type TimerRootBaseProps as RootBaseProps, type TimerRootProps as RootProps, TimerRootProvider as RootProvider, type TimerRootProviderProps as RootProviderBaseProps, type TimerRootProviderBaseProps as RootProviderProps, TimerSeparator as Separator, type TimerSeparatorBaseProps as SeparatorBaseProps, type TimerSeparatorProps as SeparatorProps, timer_TickDetails as TickDetails };
}

export { timer as Timer, TimerActionTrigger, type TimerActionTriggerBaseProps, type TimerActionTriggerProps, TimerArea, type TimerAreaBaseProps, type TimerAreaProps, TimerContext, type TimerContextProps, TimerControl, type TimerControlBaseProps, type TimerControlProps, TimerItem, type TimerItemBaseProps, type TimerItemProps, TimerRoot, type TimerRootBaseProps, type TimerRootProps, TimerRootProvider, type TimerRootProviderBaseProps, type TimerRootProviderProps, TimerSeparator, type TimerSeparatorBaseProps, type TimerSeparatorProps, type UseTimerContext, type UseTimerProps, type UseTimerReturn, useTimer, useTimerContext };
