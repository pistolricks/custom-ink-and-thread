import * as solid_js from 'solid-js';
import { HTMLProps, PolymorphicProps } from '../factory.js';
import { U as UsePresenceProps, a as UsePresenceReturn } from '../../use-presence-Ct1onT3-.js';
export { u as usePresence } from '../../use-presence-Ct1onT3-.js';
import '../../types-B277wCdv.js';
import '@zag-js/presence';
import '../../render-strategy-B5MqQP3X.js';

interface PresenceBaseProps extends UsePresenceProps, PolymorphicProps<'div'> {
}
interface PresenceProps extends HTMLProps<'div'>, PresenceBaseProps {
}
declare const Presence: (props: PresenceProps) => solid_js.JSX.Element;

declare const splitPresenceProps: <T extends UsePresenceProps>(props: T) => [Pick<T, Extract<("lazyMount" | "unmountOnExit" | "onExitComplete" | "present" | "immediate")[], readonly (keyof T)[]>[number]>, { [P in keyof T as Exclude<P, "lazyMount" | "unmountOnExit" | "onExitComplete" | "present" | "immediate">]: T[P]; }];

interface UsePresenceContext extends UsePresenceReturn {
}
declare const PresenceProvider: solid_js.ContextProviderComponent<UsePresenceContext>;
declare const usePresenceContext: () => UsePresenceContext;

export { Presence, type PresenceProps, PresenceProvider, type UsePresenceContext, UsePresenceProps, UsePresenceReturn, splitPresenceProps, usePresenceContext };
